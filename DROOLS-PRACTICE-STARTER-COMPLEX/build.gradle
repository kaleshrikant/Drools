plugins {
    id 'java'
    id 'application'
}

// Suppress Gradle warnings early
gradle.startParameter.warningMode = org.gradle.api.logging.configuration.WarningMode.None

group = 'com.kaleshrikant.drools'
version = '0.0.1-SNAPSHOT'
description = 'Drools Rule Engine Complex Learning Project'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ✅ Drools Core Only
    implementation 'org.drools:drools-core:9.44.0.Final'
    implementation 'org.drools:drools-compiler:9.44.0.Final'
    implementation 'org.kie:kie-api:9.44.0.Final'
    implementation 'org.kie:kie-ci:9.44.0.Final'
    implementation 'org.drools:drools-xml-support:9.44.0.Final'
    implementation 'org.slf4j:slf4j-simple:2.0.7'

    // ✅ Simple logging (no Spring dependencies)
    implementation 'org.slf4j:slf4j-simple:2.0.7'
}

test {
    enabled = false
}

// =========================================
// QUIET CONFIGURATION - ADD THESE SECTIONS
// =========================================

// Quiet compilation
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-Xlint:none'
    options.deprecation = false
    options.warnings = false
}

// Quiet task execution
tasks.configureEach {
    logging.captureStandardOutput LogLevel.LIFECYCLE
    logging.captureStandardError LogLevel.LIFECYCLE
}

// Quiet run configuration
tasks.withType(JavaExec).configureEach {
    logging.captureStandardOutput LogLevel.QUIET
    logging.captureStandardError LogLevel.QUIET
    jvmArgs = [
            '-Dorg.slf4j.simpleLogger.defaultLogLevel=WARN',
            '-Dorg.slf4j.simpleLogger.log.org.drools=WARN',
            '-Dorg.slf4j.simpleLogger.log.org.kie=WARN'
    ]
}


// Generate Maven metadata to avoid Drools warnings
tasks.register('generateMavenMetadata') {
    doLast {
        def mavenDir = file("$buildDir/resources/main/META-INF/maven/$project.group/$project.name")
        mavenDir.mkdirs()

        // Create pom.properties
                def pomProperties = new File(mavenDir, "pom.properties")
                pomProperties.text = """    #Generated by Gradle
                                            version=$project.version
                                            groupId=$project.group
                                            artifactId=$project.name
                                     """

        // Create minimal pom.xml
                def pomXml = new File(mavenDir, "pom.xml")
                pomXml.text = """   <?xml version="1.0" encoding="UTF-8"?>
                                        <project>
                                            <modelVersion>4.0.0</modelVersion>
                                            <groupId>$project.group</groupId>
                                            <artifactId>$project.name</artifactId>
                                            <version>$project.version</version>
                                            <name>$project.name</name>
                                            <description>$project.description</description>
                                        </project>
                              """
    }
}

// Use new task configuration API
tasks.named('processResources') {
    finalizedBy tasks.named('generateMavenMetadata')
}

// Configure run with main class parameter (modern approach)
tasks.register('runDroolsProgram', JavaExec) {
    group = 'Execution'
    description = 'Run any Drools program'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = project.findProperty('mainClass') ?: 'com.kaleshrikant.core.hello.HelloDroolsProgram'
}